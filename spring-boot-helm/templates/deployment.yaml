apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-deployment
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.app.name }}
      app.kubernetes.io/component: {{ .Values.app.component }}
      app.kubernetes.io/managed-by: {{ .Values.app.manager }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.app.name }}
        app.kubernetes.io/component: {{ .Values.app.component }}
        app.kubernetes.io/managed-by: {{ .Values.app.manager }}
    spec:
      initContainers:
        - name: {{ .Values.initContainers.name }}
          image: {{ .Values.initContainers.image }}
          command: {{ .Values.initContainers.command }}

      containers:
        - name: {{ .Values.deployments.name }}
          image: {{ .Values.app.image.repository }}:{{ .Values.app.image.tag }}
          imagePullPolicy: {{ .Values.deployments.imagePullPolicy }}
          ports:
            - containerPort: {{ .Values.deployments.containerPort }}
          envFrom:
            - configMapRef:
                name: {{ .Values.configmap.name }}
            - secretRef:
                name: {{ .Values.postgresql.auth.existingSecret }}
          env:
            - name: POSTGRES_HOST
              value: postgres
          resources: {}
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: {{ .Values.deployments.containerPort }}
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.deployments.containerPort }}
          startupProbe:
            httpGet:
              path: /actuator/health/readiness
              port: {{ .Values.deployments.containerPort }}
